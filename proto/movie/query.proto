syntax = "proto3";
package movie.movie;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "movie/params.proto";
import "movie/movie.proto";
// this line is used by starport scaffolding # 1

option go_package = "movie/x/movie/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/movie/movie/params";
  }
  // Queries a Movie by id.
	rpc Movie(QueryGetMovieRequest) returns (QueryGetMovieResponse) {
		option (google.api.http).get = "/movie/movie/movie/{id}";
	}

	// Queries a list of Movie items.
	rpc MovieAll(QueryAllMovieRequest) returns (QueryAllMovieResponse) {
		option (google.api.http).get = "/movie/movie/movie";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetMovieRequest {
	uint64 id = 1;
}

message QueryGetMovieResponse {
	Movie Movie = 1 [(gogoproto.nullable) = false];
}

message QueryAllMovieRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMovieResponse {
	repeated Movie Movie = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
